#!/usr/bin/python3
import sys, argparse, time
from chordproc.crd_test import CRD_test
from chordproc.crd_gui  import CRD_data, CRD_interface
from laudable.laudable import LAUD_data
laud = LAUD_data()

def GetPathToSong(artist, album=None, song=None):
    path = None
    image = None

    if song:
        songs = []
        if album:
            songs = laud.find_album(artist, album).findSong(song)
        else:
            songs = laud.find_artist(artist).findSong(song, True)
        path = songs[0].path
    elif album:
        a = laud.find_album(artist, album)
        path = a.playlist
        image = a.image

    return path, image

def proc_options():
    parser = argparse.ArgumentParser()
    parser.add_argument( '-update',  action='store_true', default=False )
    parser.add_argument( '-html',    action='store_true', default=False )
    parser.add_argument( '-gui',     action='store_true', default=False )
    parser.add_argument( '-test',    action='store_true', default=False )
    parser.add_argument( '-tunings', type=str, default=None )

    options = parser.parse_args()

    options.html_root = r'./html/'
    options.root      = r'./crds'
    options.pickle    = r'/home/jpf/bin/chord_pickle'

    options_dict = vars(options)

    return options_dict

if __name__ == "__main__":
    time.clock()

    opts = proc_options()

    opts["player"] = GetPathToSong

    if opts["test"]:
        CRD_test().run()
        sys.exit(1)

    data = CRD_data(opts)

    if opts["update"]:
        data.summarise_data()

    if opts["html"]:
        data.make_html()

    if opts["gui"]:
        CRD_interface.gui(data)

    time_taken = time.clock()

    print( "Time taken: %2.2f seconds" % time_taken )

